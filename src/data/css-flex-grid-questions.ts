import type { Question } from '@/types/question.ts'

export const cssFlexGridQuestions: Question[] = [
  {
    id: 1,
    question: "В какой ситуации Flexbox является более подходящим выбором, чем CSS Grid?",
    options: [
      "При создании двумерного макета с фиксированными рядами и колонками",
      "При создании одномерного макета с выравниванием элементов в ряд или колонку",
      "При создании сложной сетки с неравномерными областями",
      "При создании макета с перекрывающимися элементами"
    ],
    correctAnswer: 1,
    explanation: "Flexbox идеально подходит для одномерных макетов, где нужно выровнять элементы в одном направлении (горизонтально или вертикально) и управлять их распределением вдоль главной оси.",
    topic: "Flex vs Grid"
  },
  {
    id: 2,
    question: "Какое основное преимущество CSS Grid перед Flexbox при создании макетов?",
    options: [
      "Лучшая поддержка в старых браузерах",
      "Возможность создания двумерных макетов с одновременным контролем строк и столбцов",
      "Более простой синтаксис",
      "Лучшая производительность"
    ],
    correctAnswer: 1,
    explanation: "CSS Grid позволяет создавать двумерные макеты, где можно одновременно контролировать расположение элементов по строкам и столбцам, что делает его идеальным для сложных макетов.",
    topic: "Flex vs Grid"
  },
  {
    id: 3,
    question: "В каком случае Flexbox и Grid НЕ могут заменить друг друга?",
    options: [
      "При создании навигационного меню",
      "При создании карточного макета",
      "При создании макета с областями разного размера, где элементы должны занимать несколько строк/столбцов одновременно",
      "При центрировании элементов"
    ],
    correctAnswer: 2,
    explanation: "CSS Grid незаменим для создания макетов с областями разного размера, где элементы могут занимать несколько строк и столбцов одновременно (grid-area, grid-column-span, grid-row-span). Flexbox не может обеспечить такой уровень контроля над двумерным размещением.",
    topic: "Flex vs Grid"
  },
  {
    id: 4,
    question: "Какой подход лучше использовать для создания адаптивного макета с компонентами разной высоты?",
    options: [
      "Только Flexbox для всего макета",
      "Только CSS Grid для всего макета",
      "CSS Grid для общей структуры страницы, Flexbox для компонентов внутри",
      "Только float и positioning"
    ],
    correctAnswer: 2,
    explanation: "Наилучший подход - использовать CSS Grid для создания общей структуры страницы (header, main, sidebar, footer), а Flexbox для внутренних компонентов, где нужно выровнять элементы в одном направлении. Это обеспечивает максимальную гибкость и контроль.",
    topic: "Flex vs Grid"
  }
]
