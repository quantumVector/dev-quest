import type { Question } from '@/types/question.ts'

export const cssIsolationQuestions: Question[] = [
  {
    id: 1,
    question: "Какая основная проблема решается с помощью изоляции стилей в CSS?",
    options: [
      "Улучшение производительности загрузки стилей",
      "Предотвращение конфликтов стилей между компонентами",
      "Уменьшение размера CSS-файлов",
      "Ускорение компиляции стилей"
    ],
    correctAnswer: 1,
    explanation: "Изоляция стилей предотвращает конфликты между стилями разных компонентов, когда стили одного компонента случайно влияют на другие элементы страницы.",
    topic: "Изоляция стилей"
  },
  {
    id: 2,
    question: "Какой из следующих подходов НЕ относится к методам изоляции стилей?",
    options: [
      "CSS Modules",
      "Styled Components",
      "CSS Grid",
      "Shadow DOM"
    ],
    correctAnswer: 2,
    explanation: "CSS Grid — это система раскладки для создания сеток, а не метод изоляции стилей. CSS Modules, Styled Components и Shadow DOM — это методы изоляции стилей.",
    topic: "Изоляция стилей"
  },
  {
    id: 3,
    question: "Как работает CSS Modules для изоляции стилей?",
    options: [
      "Инкапсулирует стили внутри Shadow DOM",
      "Генерирует уникальные имена классов для каждого модуля",
      "Использует префиксы для всех селекторов",
      "Применяет стили только к определенным тегам"
    ],
    correctAnswer: 1,
    explanation: "CSS Modules автоматически генерирует уникальные имена классов для каждого модуля, что предотвращает конфликты имен классов между разными компонентами.",
    topic: "Изоляция стилей"
  },
  {
    id: 4,
    question: "В чем основное преимущество Shadow DOM для изоляции стилей?",
    options: [
      "Быстрая компиляция стилей",
      "Меньший размер CSS",
      "Нативная изоляция на уровне браузера",
      "Лучшая поддержка старых браузеров"
    ],
    correctAnswer: 2,
    explanation: "Shadow DOM обеспечивает нативную изоляцию стилей на уровне браузера, создавая изолированную область DOM с собственными стилями, которые не влияют на остальную страницу.",
    topic: "Изоляция стилей"
  },
  {
    id: 5,
    question: "Что такое CSS-in-JS в контексте изоляции стилей?",
    options: [
      "Способ написания CSS внутри JavaScript-файлов",
      "Метод компиляции CSS в JavaScript",
      "Технология для автоматической генерации CSS",
      "Подход к изоляции стилей через JavaScript"
    ],
    correctAnswer: 3,
    explanation: "CSS-in-JS — это подход к изоляции стилей, при котором стили определяются и управляются через JavaScript, что обеспечивает автоматическую изоляцию и динамическое управление стилями.",
    topic: "Изоляция стилей"
  },
  {
    id: 6,
    question: "Какая проблема может возникнуть при использовании BEM-методологии для изоляции стилей?",
    options: [
      "Плохая производительность",
      "Длинные имена классов",
      "Невозможность вложенности",
      "Отсутствие поддержки браузерами"
    ],
    correctAnswer: 1,
    explanation: "BEM-методология может приводить к очень длинным именам классов (например, .block__element--modifier), что может усложнить читаемость кода и увеличить размер HTML.",
    topic: "Изоляция стилей"
  },
  {
    id: 7,
    question: "Как работает scoped CSS в Vue.js?",
    options: [
      "Добавляет уникальные атрибуты к элементам и селекторам",
      "Использует Shadow DOM для изоляции",
      "Генерирует уникальные имена классов",
      "Применяет инлайн-стили"
    ],
    correctAnswer: 0,
    explanation: "Scoped CSS в Vue.js добавляет уникальные data-атрибуты к элементам компонента и модифицирует CSS-селекторы, добавляя к ним эти атрибуты для обеспечения изоляции.",
    topic: "Изоляция стилей"
  },
  {
    id: 8,
    question: "Какой недостаток имеет использование инлайн-стилей для изоляции?",
    options: [
      "Медленная загрузка страницы",
      "Невозможность использования псевдоклассов и медиазапросов",
      "Плохая поддержка браузерами",
      "Конфликты с другими стилями"
    ],
    correctAnswer: 1,
    explanation: "Инлайн-стили не поддерживают псевдоклассы (:hover, :focus), псевдоэлементы (::before, ::after) и медиазапросы, что серьезно ограничивает возможности стилизации.",
    topic: "Изоляция стилей"
  },
  {
    id: 9,
    question: "Что происходит с глобальными стилями при использовании CSS Modules?",
    options: [
      "Они полностью удаляются",
      "Они остаются доступными наравне с модульными стилями",
      "Они автоматически преобразуются в модульные",
      "Они блокируются и не применяются"
    ],
    correctAnswer: 1,
    explanation: "CSS Modules изолируют только те стили, которые определены в модулях. Глобальные стили остаются доступными и могут использоваться одновременно с модульными стилями.",
    topic: "Изоляция стилей"
  },
  {
    id: 10,
    question: "Какая особенность у styled-components в React?",
    options: [
      "Статическая генерация CSS",
      "Динамическая генерация стилей на основе props",
      "Использование только глобальных стилей",
      "Работа только с CSS препроцессорами"
    ],
    correctAnswer: 1,
    explanation: "Styled-components позволяет создавать динамические стили на основе props компонента, что обеспечивает гибкость и изоляцию стилей одновременно.",
    topic: "Изоляция стилей"
  },
  {
    id: 11,
    question: "Как решается проблема специфичности при использовании изоляции стилей?",
    options: [
      "Увеличением веса селекторов",
      "Использованием !important",
      "Локализацией стилей в пределах компонента",
      "Удалением всех селекторов"
    ],
    correctAnswer: 2,
    explanation: "Изоляция стилей решает проблему специфичности через локализацию стилей в пределах компонента, что исключает необходимость в сложных селекторах и борьбе за приоритет.",
    topic: "Изоляция стилей"
  },
  {
    id: 12,
    question: "Какой подход используется в Emotion для изоляции стилей?",
    options: [
      "Генерация уникальных классов",
      "Shadow DOM",
      "CSS-in-JS с автоматической генерацией классов",
      "Префиксы селекторов"
    ],
    correctAnswer: 2,
    explanation: "Emotion использует CSS-in-JS подход, автоматически генерируя уникальные имена классов и вставляя стили в DOM, что обеспечивает изоляцию.",
    topic: "Изоляция стилей"
  },
  {
    id: 13,
    question: "Какая проблема может возникнуть при миграции с глобальных стилей на изолированные?",
    options: [
      "Потеря всех стилей",
      "Нарушение наследования и каскадирования",
      "Увеличение размера файлов",
      "Снижение производительности"
    ],
    correctAnswer: 1,
    explanation: "При миграции на изолированные стили может нарушиться наследование CSS-свойств и каскадирование, что потребует переработки архитектуры стилей.",
    topic: "Изоляция стилей"
  },
  {
    id: 14,
    question: "Что такое CSS containment в контексте изоляции стилей?",
    options: [
      "Метод сжатия CSS-файлов",
      "Способ ограничения влияния стилей на производительность",
      "Технология изоляции стилей через contain свойство",
      "Подход к группировке селекторов"
    ],
    correctAnswer: 2,
    explanation: "CSS containment через свойство 'contain' позволяет ограничить влияние элемента на остальную часть страницы, что может использоваться для изоляции стилей и оптимизации производительности.",
    topic: "Изоляция стилей"
  },
  {
    id: 15,
    question: "Какое влияние оказывают изолированные стили на SEO?",
    options: [
      "Негативное влияние из-за сложности HTML",
      "Позитивное влияние за счет улучшения производительности",
      "Никакого влияния",
      "Зависит от используемого метода изоляции"
    ],
    correctAnswer: 3,
    explanation: "Влияние изолированных стилей на SEO зависит от метода: CSS-in-JS может замедлить первичную загрузку, а CSS Modules или scoped CSS обычно не влияют на SEO или даже улучшают производительность.",
    topic: "Изоляция стилей"
  },
  // Новые вопросы
  {
    id: 16,
    question: "Какой недостаток характерен для CSS-in-JS решений по сравнению с статическими CSS?",
    options: [
      "Невозможность динамических стилей",
      "Runtime overhead при генерации стилей",
      "Отсутствие поддержки медиазапросов",
      "Невозможность использования псевдоклассов"
    ],
    correctAnswer: 1,
    explanation: "CSS-in-JS решения генерируют стили во время выполнения (runtime), что может влиять на производительность, особенно при первой загрузке страницы.",
    topic: "Изоляция стилей"
  },
  {
    id: 17,
    question: "Что означает понятие 'style leakage' в контексте изоляции стилей?",
    options: [
      "Утечка памяти при использовании стилей",
      "Непреднамеренное влияние стилей компонента на другие части приложения",
      "Потеря стилей при обновлении страницы",
      "Неправильная загрузка CSS файлов"
    ],
    correctAnswer: 1,
    explanation: "Style leakage (утечка стилей) — это ситуация, когда стили одного компонента непреднамеренно влияют на элементы других компонентов, что является основной проблемой, решаемой изоляцией стилей.",
    topic: "Изоляция стилей"
  },
  {
    id: 18,
    question: "Как работает атрибут 'scoped' в Single File Components (SFC) фреймворков?",
    options: [
      "Блокирует все глобальные стили",
      "Добавляет уникальный хеш к селекторам и элементам",
      "Использует Shadow DOM для изоляции",
      "Создает отдельный CSS файл для каждого компонента"
    ],
    correctAnswer: 1,
    explanation: "Атрибут 'scoped' добавляет уникальный хеш (например, data-v-f3f3eg9) к CSS селекторам и соответствующим HTML элементам, обеспечивая изоляцию стилей на уровне компонента.",
    topic: "Изоляция стилей"
  },
  {
    id: 19,
    question: "Какую проблему решает CSS-in-JS в серверном рендеринге (SSR)?",
    options: [
      "Блокировку загрузки страницы",
      "Flash of Unstyled Content (FOUC)",
      "Медленную компиляцию CSS",
      "Конфликты имен классов"
    ],
    correctAnswer: 1,
    explanation: "CSS-in-JS в SSR помогает избежать Flash of Unstyled Content (FOUC), генерируя критические стили на сервере и встраивая их в HTML, что обеспечивает стилизацию контента с момента загрузки.",
    topic: "Изоляция стилей"
  },
  {
    id: 20,
    question: "Что такое 'CSS Logical Properties' и как они связаны с изоляцией стилей?",
    options: [
      "Метод группировки CSS правил",
      "Способ создания логических селекторов",
      "Свойства для логической стилизации (start/end вместо left/right)",
      "Технология изоляции стилей в компонентах"
    ],
    correctAnswer: 2,
    explanation: "CSS Logical Properties (margin-inline-start, padding-block-end) помогают создавать компоненты, независимые от направления письма, что важно для изолированных компонентов в многоязычных приложениях.",
    topic: "Изоляция стилей"
  },
  {
    id: 21,
    question: "Какой паттерн используется в Angular для изоляции стилей компонентов?",
    options: [
      "CSS Modules",
      "View Encapsulation",
      "Shadow DOM только",
      "Inline стили только"
    ],
    correctAnswer: 1,
    explanation: "Angular использует View Encapsulation с тремя режимами: Emulated (эмуляция scoped CSS), ShadowDom (нативный Shadow DOM) и None (без изоляции).",
    topic: "Изоляция стилей"
  },
  {
    id: 22,
    question: "Что происходит при использовании :global() в CSS Modules?",
    options: [
      "Стиль применяется глобально, минуя изоляцию модуля",
      "Стиль удаляется из финального CSS",
      "Стиль применяется только к текущему модулю",
      "Стиль преобразуется в инлайн"
    ],
    correctAnswer: 0,
    explanation: ":global() в CSS Modules позволяет определить глобальные стили внутри модуля, которые не будут хешироваться и будут применяться ко всем элементам на странице.",
    topic: "Изоляция стилей"
  },
  {
    id: 23,
    question: "Какая основная проблема возникает при использовании iframe для изоляции стилей?",
    options: [
      "Невозможность стилизации",
      "Сложность коммуникации между iframe и родительским окном",
      "Отсутствие поддержки в браузерах",
      "Медленная загрузка стилей"
    ],
    correctAnswer: 1,
    explanation: "Iframe создает полную изоляцию, но усложняет обмен данными между компонентом в iframe и основным приложением, а также может создавать проблемы с доступностью и SEO.",
    topic: "Изоляция стилей"
  },
  {
    id: 24,
    question: "Что такое 'Critical CSS' в контексте изолированных компонентов?",
    options: [
      "CSS, который может сломать компонент",
      "Минимальный набор стилей для первичного рендеринга",
      "CSS с высокой специфичностью",
      "Обязательные глобальные стили"
    ],
    correctAnswer: 1,
    explanation: "Critical CSS — это минимальный набор стилей, необходимый для рендеринга видимой части страницы. В изолированных компонентах это помогает оптимизировать загрузку.",
    topic: "Изоляция стилей"
  },
  {
    id: 25,
    question: "Как PostCSS плагины могут помочь в изоляции стилей?",
    options: [
      "Только через минификацию CSS",
      "Автоматическое добавление префиксов и скопирование классов",
      "Удаление всех глобальных стилей",
      "Преобразование CSS в JavaScript"
    ],
    correctAnswer: 1,
    explanation: "PostCSS плагины могут автоматически добавлять уникальные префиксы к классам, скопировать стили или трансформировать селекторы для обеспечения изоляции стилей.",
    topic: "Изоляция стилей"
  },
  {
    id: 26,
    question: "Какую роль играет 'CSS Custom Properties' (переменные) в изоляции стилей?",
    options: [
      "Полностью заменяют изоляцию стилей",
      "Не связаны с изоляцией стилей",
      "Помогают создавать изолированные темы и конфигурации",
      "Нарушают изоляцию стилей"
    ],
    correctAnswer: 2,
    explanation: "CSS Custom Properties позволяют создавать изолированные системы тем и конфигураций внутри компонентов, передавая значения через границы изоляции.",
    topic: "Изоляция стилей"
  },
  {
    id: 27,
    question: "Что такое 'style budget' в контексте изолированных компонентов?",
    options: [
      "Финансовые затраты на разработку стилей",
      "Лимит на размер CSS файлов компонента",
      "Количество разработчиков, работающих со стилями",
      "Время, потраченное на написание стилей"
    ],
    correctAnswer: 1,
    explanation: "Style budget — это ограничение на размер CSS, которое помогает контролировать производительность изолированных компонентов и предотвращать их раздувание.",
    topic: "Изоляция стилей"
  },
  {
    id: 28,
    question: "Как работает изоляция стилей в Web Components с открытым Shadow DOM?",
    options: [
      "Стили полностью изолированы от внешнего мира",
      "Стили компонента изолированы, но внешние стили могут влиять через наследование",
      "Изоляция не работает",
      "Стили автоматически копируются в глобальную область"
    ],
    correctAnswer: 1,
    explanation: "В открытом Shadow DOM стили компонента изолированы, но некоторые CSS свойства (color, font-family) могут наследоваться от родительских элементов.",
    topic: "Изоляция стилей"
  },
  {
    id: 29,
    question: "Какая стратегия лучше всего подходит для изоляции стилей в дизайн-системе?",
    options: [
      "Использование только инлайн стилей",
      "Комбинация CSS Custom Properties и CSS Modules",
      "Полная изоляция через iframe",
      "Отказ от любой изоляции"
    ],
    correctAnswer: 1,
    explanation: "Дизайн-системы лучше всего работают с комбинацией CSS Custom Properties для тем и конфигурации, и CSS Modules или подобных технологий для изоляции компонентов.",
    topic: "Изоляция стилей"
  },
  {
    id: 30,
    question: "Что такое 'CSS Cascade Layers' и как они влияют на изоляцию стилей?",
    options: [
      "Устаревший метод организации CSS",
      "Способ контроля каскада без изменения специфичности",
      "Метод изоляции стилей через слои",
      "Инструмент для анимации CSS"
    ],
    correctAnswer: 1,
    explanation: "CSS Cascade Layers (@layer) позволяют контролировать порядок применения стилей независимо от специфичности, что может дополнять методы изоляции стилей.",
    topic: "Изоляция стилей"
  }
]
